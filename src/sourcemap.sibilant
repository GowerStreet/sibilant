(var source-node (get (require "source-map") 'Source-node))

(def source-map (node)
     (if
      (node? node 'output)
       (new source-node
            node.source.line
            node.source.col
            node.source.file
            (if (list? node.contents)
                         (map node.contents source-map)
                         (source-map node.contents)))

       (or (string? node) (number? node)) (node.to-string)))


(def sourcemapper (node)
     (var source-nodes (pipe node transpile source-map)
          map (pipe source-nodes .to-string-with-source-map (get 'map)))

     (each key (keys sibilant.source-cache)
           (map.set-source-content key (get sibilant.source-cache key)))

     (map.to-string))
