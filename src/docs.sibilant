(set sibilant 'docs { definitions []
                      undocumented {} })

(def sibilant.docs.record (name node)
     (var doc sibilant.docs.last-doc)
     (if (defined? doc)
         (do
          (delete (get sibilant.docs.undocumented name))
          (sibilant.docs.definitions.push (merge-into doc { name name definition node })))
         (set sibilant.docs.undocumented name true))
     (delete sibilant.docs.last-doc))

(def sibilant.docs.as-text ()
     (var cdl (require 'cardinal))
     (each definition sibilant.docs.definitions
           (try (do
           (console.log ("name: " definition.name "\n"
                         "description: " definition.doc-string "\n"
                         (if definition.references ("references:\n" (pipe definition
                                                         (get 'references)
                                                         (.map (#> (pipe #0 (transpile) (output-formatter) (eval))))
                                                         (.join "\n")
                                                         (concat "\n")))
                                                         "")
                         "arguments: " (pipe definition.definition.contents
                                             (third)
                                             (prettify)) "\n"
                         "examples: \n" (pipe definition.examples
                                            (map (#> (concat (prettify #0 true)
                                                             "\n"
                                                             (pipe #0
                                                                   (transpile)
                                                                   (output-formatter)
                                                                   (cdl.highlight)))))
                                            (.join "\n\n")) "\n\n"))) (do (console.log definition) (throw e))))
     (console.log ("undocumented ("sibilant.docs.undocumented.size"):\n"))
     (each name sibilant.docs.undocumented (console.log name)))

