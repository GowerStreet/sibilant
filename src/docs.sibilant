(var docs (set sibilant 'docs { definitions []
                                undocumented {} }))

(def docs.record (name node)
     (var doc docs.last-doc)
     (if (defined? doc)
         (do
          (delete (get docs.undocumented name))
          (docs.definitions.push (merge-into doc { name name definition node examples (or doc.examples []) })))
         (set docs.undocumented name true))
     (delete docs.last-doc))

(def docs.text ()
     (var cdl (require 'cardinal))
     (pipe docs.definitions
           (.map (#(definition)
                   ("name: " definition.name "\n"
                             "description: " definition.doc-string "\n"
                             (if definition.references ("references:\n" (pipe definition
                                                                              (get 'references)
                                                                              (.map (#> (pipe #0 (transpile) (output-formatter) (eval))))
                                                                              (.join "\n")
                                                                              (concat "\n")))
                                 "")
                             "arguments: " (pipe definition.definition.contents
                                                 (third)
                                                 (prettify)) "\n"
                                                 "examples: \n" (pipe definition.examples
                                                                      (map (#> (concat (prettify #0 true)
                                                                                       "\n"
                                                                                       (pipe #0
                                                                                             (transpile)
                                                                                             (output-formatter)
                                                                                             (cdl.highlight)))))
                                                                      (.join "\n\n")) "\n\n")))
           (.join "")))

(def docs.json ()
     (JSON.stringify (docs.data)))

(def docs.data ()
     (docs.definitions.map
                      (#(definition)
                        { name definition.name
                          description definition.doc-string
                          references definition.references
                          arguments (pipe definition.definition.contents
                                          (third)
                                          (get 'contents)
                                          (.map (#-> (transpile) (output-formatter))))
                          definition (prettify definition.definition false)
                          examples: (definition.examples.map (#> { javascript (pipe #0 (transpile) (output-formatter))
                                                                   sibilant (prettify #0 false) }))
                          
                          })))
