(chainable $)

($ (#>
    (defun trim (item) (item.replace "/^\\s*|\\s*$/g" "\"\""))

    (defun check-hash ()
      (when (defined? check-hash.timeout)
        (clear-timeout check-hash.timeout)
        (delete check-hash.timeout))

      (when (!= window.location.hash ($ window (data 'last-hash)))
        ($ window
           (data 'last-hash window.location.hash)
           (trigger 'hash-change window.location.hash))))

    (set check-hash 'timeout (set-timeout check-hash 500))

    (defvar items ($ "script[language=sibilant/example]"
                     (each (#> ($ "#contents"
                                  (append (+ "<li><a href=\"#" ($ this (attr 'id)) "\">"
                                             ($ this (attr "data-title"))
                                             "</a></li>")))))))


    (defun hash-change (evt hash)
      (defvar item ($ items (filter hash)))

      (when (!= 0 item.length)
        (defvar content ($ item (text)
                           (replace "<![CDATA[\n" "") (replace "]]>\n" ""))
                title ($ item (attr "data-title"))
                next ($ item (next items.selector))
                prev ($ item (prev items.selector)))

        ($ "header h2" (html title))
        
        (if (> next.length 0)
          ($ "#next"
             (text (next.attr "data-title"))
             (attr 'href (+ "#" (send next attr 'id)))
             (show))
          (send ($ "#next") hide))
        
        (if (> prev.length 0)
          ($ "#prev"
             (attr 'href (+ "#" (send prev attr 'id)))
             (show))
          ($ "#prev" (hide)))

        ($ 'textarea
           (val (trim content))
           (keyup))))

      ($ window
         (click (#> (set-timeout check-hash 25)))
         (bind 'hash-change hash-change))

      (switch window.location.hash
        (("" "#")
         (set window.location 'hash
              ($ items (first) (attr 'id)))))

      ($ 'textarea
         (focus)
         (keyup (#(evt)
                  (try ($ "#output"
                          (text (sibilant.translate-all ($ 'textarea (val))))
                          (remove-class 'error))
                       ($ "#output"
                          (text e.stack)
                          (add-class 'error))))))

    (check-hash)))


